version: "3"

services:
  mongo:
    image: mongo:4.2
    container_name: mongo
    volumes:
      - ./data/mongo:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: test
      MONGO_INITDB_DATABASE: test
      MONGO_REPLICA_SET_NAME: rs0
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
      interval: 10s
      start_period: 5s
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - 27017:27017
    networks:
      - shared
  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - shared
  mc:
    image: itzg/minecraft-server:java16
    container_name: mc
    stdin_open: true
    tty: true
    environment:
      TYPE: "Paper"
      EULA: "TRUE"
      ENABLE_RCON: "true"
      RCON_PASSWORD: "testing"
      RCON_PORT: 25575
      VERSION: "1.16.5"
      INIT_MEMORY: "1G"
      MAX_MEMORY: "2G"
      JVM_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    volumes:
      - ./data:/data
    networks:
      - shared
    ports:
      - 25565:25565
      - 25575:25575
      - 5005:5005
networks:
  shared:
    name: test_server_network
